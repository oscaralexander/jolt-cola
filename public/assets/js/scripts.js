/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(1);
module.exports = __webpack_require__(4);


/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__modules_three__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__modules_win__ = __webpack_require__(3);\n\n\n\nDomReady.ready(function () {\n    __WEBPACK_IMPORTED_MODULE_0__modules_three__[\"a\" /* default */].init();\n    __WEBPACK_IMPORTED_MODULE_1__modules_win__[\"a\" /* default */].init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvc2NyaXB0cy5qcz82NDA1Il0sIm5hbWVzIjpbIkRvbVJlYWR5IiwicmVhZHkiLCJ0aHJlZSIsImluaXQiLCJ3aW4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7O0FBRUFBLFNBQVNDLEtBQVQsQ0FBZSxZQUFNO0FBQ2pCQyxtRUFBS0EsQ0FBQ0MsSUFBTjtBQUNBQyxpRUFBR0EsQ0FBQ0QsSUFBSjtBQUNILENBSEQiLCJmaWxlIjoiMS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0aHJlZSBmcm9tICcuL21vZHVsZXMvdGhyZWUnXG5pbXBvcnQgd2luIGZyb20gJy4vbW9kdWxlcy93aW4nXG5cbkRvbVJlYWR5LnJlYWR5KCgpID0+IHtcbiAgICB0aHJlZS5pbml0KClcbiAgICB3aW4uaW5pdCgpICAgIFxufSlcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvanMvc2NyaXB0cy5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("var three = {\n    can: null,\n    centerX: window.innerWidth * 0.5,\n    centerY: window.innerHeight * 0.5,\n    deltaX: 0,\n    deltaY: 0,\n    el: document.getElementById('three'),\n    isMobile: Modernizr.touchevents && window.innerWidth <= 1024,\n    mainLight: null,\n    mouseX: 0,\n    mouseY: 0,\n    paused: false,\n    pointLights: [],\n    step: 0,\n\n    addMainLight: function addMainLight() {\n        var pointLight = new THREE.PointLight(0xEEEEFF);\n        pointLight.position.set(1, 4, 1);\n        this.camera.add(pointLight);\n        this.scene.add(this.camera);\n    },\n    addPointLights: function addPointLights() {\n        var _this = this;\n\n        var loader = void 0;\n        var material = void 0;\n        var pointLight = void 0;\n        var sprite = void 0;\n\n        var lights = [0xFF2244, 0x990099];\n\n        var _loop = function _loop(i) {\n            loader = new THREE.TextureLoader();\n            loader.load('/assets/3d/light-' + (i + 1) + '.png', function (texture) {\n                // Create light sprite\n                material = new THREE.SpriteMaterial({\n                    blending: THREE.AdditiveBlending,\n                    transparent: true,\n                    map: texture\n                });\n                sprite = new THREE.Sprite(material);\n                sprite.scale.set(0.25, 0.25, 1);\n\n                // Create actual light\n                pointLight = new THREE.PointLight(lights[i], 1, 2.5);\n                pointLight.add(sprite);\n                _this.pointLights.push(pointLight);\n                _this.scene.add(_this.pointLights[_this.pointLights.length - 1]);\n            });\n        };\n\n        for (var i = 0; i < 2; i++) {\n            _loop(i);\n        }\n    },\n    animate: function animate() {\n        this.deltaX += (this.mouseX - this.deltaX) * 0.05;\n        this.deltaY += (this.mouseY - this.deltaY) * 0.05;\n        this.step += 0.05;\n\n        if (this.can) {\n            this.camera.position.set(0, -0.25 * (this.deltaY / this.centerY), 4);\n            this.can.rotation.x = -35 * (this.deltaY / this.centerY) * Math.PI / 180;\n            this.can.rotation.y += this.deltaX / this.centerX * 0.025;\n        }\n\n        this.animatePointLights();\n\n        requestAnimationFrame(this.animate.bind(this));\n        this.render();\n    },\n    animatePointLights: function animatePointLights() {\n        var _this2 = this;\n\n        var x = void 0;\n        var y = void 0;\n        var z = void 0;\n\n        this.pointLights.forEach(function (pointLight, i) {\n            var multiplier = i % 2 ? -1.5 : 1.5;\n\n            x = Math.cos(_this2.step * 0.1) * multiplier;\n            y = Math.sin(_this2.step * 0.1) * multiplier;\n            z = Math.sin(_this2.step * 0.1) * (multiplier * -1);\n            _this2.pointLights[i].position.set(x, y, z);\n        });\n    },\n    drawCan: function drawCan() {\n        var _this3 = this;\n\n        var color = 0xCCCCCC;\n        var loader = new THREE.ColladaLoader();\n        var shininess = 30;\n        var specular = 0x444444;\n        var textureLoader = new THREE.TextureLoader();\n\n        loader.load('assets/3d/can.dae', function (collada) {\n            _this3.can = collada.scene;\n            _this3.can.traverse(function (node) {\n                if (node.isMesh) {\n                    if (node.name === 'body') {\n                        // Render wrapper\n                        textureLoader.load('/assets/3d/wrapper.png', function (texture) {\n                            texture.anisotropy = _this3.renderer.capabilities.getMaxAnisotropy();\n\n                            node.material = new THREE.MeshPhongMaterial({\n                                color: color,\n                                map: texture,\n                                shininess: shininess,\n                                specular: 0x666666\n                            });\n                        });\n                    } else {\n                        // Render aluminium\n                        node.material = new THREE.MeshPhongMaterial({\n                            color: color,\n                            shininess: shininess,\n                            specular: specular\n                        });\n                    }\n                }\n            });\n\n            _this3.scene.add(_this3.can);\n        });\n    },\n    init: function init() {\n        this.initScene();\n        this.initRenderer();\n        this.initCamera();\n\n        // Geometry\n        this.drawCan();\n\n        // Add light\n        this.addPointLights();\n        this.addMainLight();\n\n        // Interaction listeners\n        if (this.isMobile) {\n            if (Modernizr.devicemotion) {\n                window.addEventListener('deviceorientation', this.onDeviceOrientation.bind(this), false);\n            }\n        } else {\n            document.addEventListener('mousemove', this.onMouseMove.bind(this), false);\n        }\n\n        // Init resize event listener\n        window.onorientationchange = this.onResize.bind(this);\n        window.onresize = this.onResize.bind(this);\n\n        // Go!\n        this.animate();\n    },\n    initCamera: function initCamera() {\n        this.camera = new THREE.PerspectiveCamera(50, this.el.offsetWidth / this.el.offsetHeight, 0.1, 1000);\n        this.camera.position.set(0, 0, 4);\n        this.camera.lookAt(0, 0, 0);\n    },\n    initRenderer: function initRenderer() {\n        this.renderer = new THREE.WebGLRenderer({\n            alpha: true,\n            antialias: true\n        });\n        this.renderer.setClearColor(0x000000, 0);\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n        this.renderer.setSize(this.el.offsetWidth, this.el.offsetHeight);\n        this.el.appendChild(this.renderer.domElement);\n    },\n    initScene: function initScene() {\n        this.scene = new THREE.Scene();\n    },\n    onDeviceOrientation: function onDeviceOrientation(e) {\n        var x = e.beta; // -180 to 180\n        var y = e.gamma; // -90, 90\n\n        x = x > 90 ? 90 : x < 0 ? 0 : x;\n        y = y > 30 ? 30 : y < -30 ? -30 : y;\n\n        this.mouseX = y / 30 * this.centerX;\n        this.mouseY = (x / -45 + 1) * this.centerY;\n    },\n    onMouseMove: function onMouseMove(e) {\n        this.mouseX = e.clientX - this.centerX;\n        this.mouseY = e.clientY - this.centerY;\n    },\n    onResize: function onResize() {\n        this.centerX = window.innerWidth * 0.5;\n        this.centerY = window.innerHeight * 0.5;\n        this.camera.aspect = this.el.offsetWidth / this.el.offsetHeight;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize(this.el.offsetWidth, this.el.offsetHeight);\n    },\n    render: function render() {\n        this.renderer.render(this.scene, this.camera);\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (three);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("var win = {\n    dragMoveX: 0,\n    dragMoveY: 0,\n    dragStartX: 0,\n    dragStartY: 0,\n    el: document.getElementById('window'),\n    elExpand: document.getElementById('window-expand'),\n    elTitleBar: document.getElementById('window-titleBar'),\n    isCollapsed: false,\n\n    init: function init() {\n        this.el.style.left = this.el.offsetLeft + 'px';\n        this.el.style.top = (window.innerHeight - this.el.offsetHeight) * 0.5 + 'px';\n        this.el.style.bottom = 'auto';\n        this.el.style.right = 'auto';\n\n        this.elTitleBar.onmousedown = this.onDragStart.bind(this);\n        this.elTitleBar.ondblclick = this.onToggleExpand.bind(this);\n        this.elExpand.onclick = this.onToggleExpand.bind(this);\n    },\n    onDrag: function onDrag(e) {\n        this.dragMoveX = e.clientX - this.dragStartX;\n        this.dragMoveY = e.clientY - this.dragStartY;\n        this.el.style.transform = 'translate(' + this.dragMoveX + 'px, ' + this.dragMoveY + 'px)';\n    },\n    onDragStart: function onDragStart(e) {\n        e.preventDefault();\n\n        this.dragStartX = e.clientX;\n        this.dragStartY = e.clientY;\n\n        document.onmousemove = this.onDrag.bind(this);\n        document.onmouseup = this.onDragStop.bind(this);\n    },\n    onDragStop: function onDragStop(e) {\n        if (this.dragMoveX || this.dragMoveY) {\n            this.el.style.left = parseInt(this.el.style.left) + this.dragMoveX + 'px';\n            this.el.style.top = parseInt(this.el.style.top) + this.dragMoveY + 'px';\n            this.dragMoveX = null;\n            this.dragMoveY = null;\n        }\n\n        this.el.style.transform = null;\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n    },\n    onToggleExpand: function onToggleExpand(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.el.classList.toggle('is-expanded');\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (win);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvbW9kdWxlcy93aW4uanM/Y2YyZSJdLCJuYW1lcyI6WyJ3aW4iLCJkcmFnTW92ZVgiLCJkcmFnTW92ZVkiLCJkcmFnU3RhcnRYIiwiZHJhZ1N0YXJ0WSIsImVsIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImVsRXhwYW5kIiwiZWxUaXRsZUJhciIsImlzQ29sbGFwc2VkIiwiaW5pdCIsInN0eWxlIiwibGVmdCIsIm9mZnNldExlZnQiLCJ0b3AiLCJ3aW5kb3ciLCJpbm5lckhlaWdodCIsIm9mZnNldEhlaWdodCIsImJvdHRvbSIsInJpZ2h0Iiwib25tb3VzZWRvd24iLCJvbkRyYWdTdGFydCIsImJpbmQiLCJvbmRibGNsaWNrIiwib25Ub2dnbGVFeHBhbmQiLCJvbmNsaWNrIiwib25EcmFnIiwiZSIsImNsaWVudFgiLCJjbGllbnRZIiwidHJhbnNmb3JtIiwicHJldmVudERlZmF1bHQiLCJvbm1vdXNlbW92ZSIsIm9ubW91c2V1cCIsIm9uRHJhZ1N0b3AiLCJwYXJzZUludCIsInN0b3BQcm9wYWdhdGlvbiIsImNsYXNzTGlzdCIsInRvZ2dsZSJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsTUFBTTtBQUNOQyxlQUFXLENBREw7QUFFTkMsZUFBVyxDQUZMO0FBR05DLGdCQUFZLENBSE47QUFJTkMsZ0JBQVksQ0FKTjtBQUtOQyxRQUFJQyxTQUFTQyxjQUFULENBQXdCLFFBQXhCLENBTEU7QUFNTkMsY0FBVUYsU0FBU0MsY0FBVCxDQUF3QixlQUF4QixDQU5KO0FBT05FLGdCQUFZSCxTQUFTQyxjQUFULENBQXdCLGlCQUF4QixDQVBOO0FBUU5HLGlCQUFhLEtBUlA7O0FBVU5DLFFBVk0sa0JBVUM7QUFDSCxhQUFLTixFQUFMLENBQVFPLEtBQVIsQ0FBY0MsSUFBZCxHQUF3QixLQUFLUixFQUFMLENBQVFTLFVBQWhDO0FBQ0EsYUFBS1QsRUFBTCxDQUFRTyxLQUFSLENBQWNHLEdBQWQsR0FBdUIsQ0FBQ0MsT0FBT0MsV0FBUCxHQUFxQixLQUFLWixFQUFMLENBQVFhLFlBQTlCLElBQThDLEdBQXJFO0FBQ0EsYUFBS2IsRUFBTCxDQUFRTyxLQUFSLENBQWNPLE1BQWQsR0FBdUIsTUFBdkI7QUFDQSxhQUFLZCxFQUFMLENBQVFPLEtBQVIsQ0FBY1EsS0FBZCxHQUFzQixNQUF0Qjs7QUFFQSxhQUFLWCxVQUFMLENBQWdCWSxXQUFoQixHQUE4QixLQUFLQyxXQUFMLENBQWlCQyxJQUFqQixDQUFzQixJQUF0QixDQUE5QjtBQUNBLGFBQUtkLFVBQUwsQ0FBZ0JlLFVBQWhCLEdBQTZCLEtBQUtDLGNBQUwsQ0FBb0JGLElBQXBCLENBQXlCLElBQXpCLENBQTdCO0FBQ0EsYUFBS2YsUUFBTCxDQUFja0IsT0FBZCxHQUF3QixLQUFLRCxjQUFMLENBQW9CRixJQUFwQixDQUF5QixJQUF6QixDQUF4QjtBQUNILEtBbkJLO0FBcUJOSSxVQXJCTSxrQkFxQkNDLENBckJELEVBcUJJO0FBQ04sYUFBSzNCLFNBQUwsR0FBaUIyQixFQUFFQyxPQUFGLEdBQVksS0FBSzFCLFVBQWxDO0FBQ0EsYUFBS0QsU0FBTCxHQUFpQjBCLEVBQUVFLE9BQUYsR0FBWSxLQUFLMUIsVUFBbEM7QUFDQSxhQUFLQyxFQUFMLENBQVFPLEtBQVIsQ0FBY21CLFNBQWQsa0JBQXVDLEtBQUs5QixTQUE1QyxZQUE0RCxLQUFLQyxTQUFqRTtBQUNILEtBekJLO0FBMkJOb0IsZUEzQk0sdUJBMkJNTSxDQTNCTixFQTJCUztBQUNYQSxVQUFFSSxjQUFGOztBQUVBLGFBQUs3QixVQUFMLEdBQWtCeUIsRUFBRUMsT0FBcEI7QUFDQSxhQUFLekIsVUFBTCxHQUFrQndCLEVBQUVFLE9BQXBCOztBQUVBeEIsaUJBQVMyQixXQUFULEdBQXVCLEtBQUtOLE1BQUwsQ0FBWUosSUFBWixDQUFpQixJQUFqQixDQUF2QjtBQUNBakIsaUJBQVM0QixTQUFULEdBQXFCLEtBQUtDLFVBQUwsQ0FBZ0JaLElBQWhCLENBQXFCLElBQXJCLENBQXJCO0FBQ0gsS0FuQ0s7QUFxQ05ZLGNBckNNLHNCQXFDS1AsQ0FyQ0wsRUFxQ1E7QUFDVixZQUFJLEtBQUszQixTQUFMLElBQWtCLEtBQUtDLFNBQTNCLEVBQXNDO0FBQ2xDLGlCQUFLRyxFQUFMLENBQVFPLEtBQVIsQ0FBY0MsSUFBZCxHQUF3QnVCLFNBQVMsS0FBSy9CLEVBQUwsQ0FBUU8sS0FBUixDQUFjQyxJQUF2QixJQUErQixLQUFLWixTQUE1RDtBQUNBLGlCQUFLSSxFQUFMLENBQVFPLEtBQVIsQ0FBY0csR0FBZCxHQUF1QnFCLFNBQVMsS0FBSy9CLEVBQUwsQ0FBUU8sS0FBUixDQUFjRyxHQUF2QixJQUE4QixLQUFLYixTQUExRDtBQUNBLGlCQUFLRCxTQUFMLEdBQWlCLElBQWpCO0FBQ0EsaUJBQUtDLFNBQUwsR0FBaUIsSUFBakI7QUFDSDs7QUFFRCxhQUFLRyxFQUFMLENBQVFPLEtBQVIsQ0FBY21CLFNBQWQsR0FBMEIsSUFBMUI7O0FBRUF6QixpQkFBUzJCLFdBQVQsR0FBdUIsSUFBdkI7QUFDQTNCLGlCQUFTNEIsU0FBVCxHQUFxQixJQUFyQjtBQUNILEtBakRLO0FBbUROVCxrQkFuRE0sMEJBbURTRyxDQW5EVCxFQW1EWTtBQUNkQSxVQUFFSSxjQUFGO0FBQ0FKLFVBQUVTLGVBQUY7QUFDQSxhQUFLaEMsRUFBTCxDQUFRaUMsU0FBUixDQUFrQkMsTUFBbEIsQ0FBeUIsYUFBekI7QUFDSDtBQXZESyxDQUFWOztBQTBEZXZDLDREQUFmIiwiZmlsZSI6IjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgd2luID0ge1xuICAgIGRyYWdNb3ZlWDogMCxcbiAgICBkcmFnTW92ZVk6IDAsXG4gICAgZHJhZ1N0YXJ0WDogMCxcbiAgICBkcmFnU3RhcnRZOiAwLFxuICAgIGVsOiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnd2luZG93JyksXG4gICAgZWxFeHBhbmQ6IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd3aW5kb3ctZXhwYW5kJyksXG4gICAgZWxUaXRsZUJhcjogZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3dpbmRvdy10aXRsZUJhcicpLFxuICAgIGlzQ29sbGFwc2VkOiBmYWxzZSxcblxuICAgIGluaXQoKSB7XG4gICAgICAgIHRoaXMuZWwuc3R5bGUubGVmdCA9IGAke3RoaXMuZWwub2Zmc2V0TGVmdH1weGBcbiAgICAgICAgdGhpcy5lbC5zdHlsZS50b3AgPSBgJHsod2luZG93LmlubmVySGVpZ2h0IC0gdGhpcy5lbC5vZmZzZXRIZWlnaHQpICogMC41fXB4YFxuICAgICAgICB0aGlzLmVsLnN0eWxlLmJvdHRvbSA9ICdhdXRvJ1xuICAgICAgICB0aGlzLmVsLnN0eWxlLnJpZ2h0ID0gJ2F1dG8nXG5cbiAgICAgICAgdGhpcy5lbFRpdGxlQmFyLm9ubW91c2Vkb3duID0gdGhpcy5vbkRyYWdTdGFydC5iaW5kKHRoaXMpXG4gICAgICAgIHRoaXMuZWxUaXRsZUJhci5vbmRibGNsaWNrID0gdGhpcy5vblRvZ2dsZUV4cGFuZC5iaW5kKHRoaXMpXG4gICAgICAgIHRoaXMuZWxFeHBhbmQub25jbGljayA9IHRoaXMub25Ub2dnbGVFeHBhbmQuYmluZCh0aGlzKVxuICAgIH0sXG5cbiAgICBvbkRyYWcoZSkge1xuICAgICAgICB0aGlzLmRyYWdNb3ZlWCA9IGUuY2xpZW50WCAtIHRoaXMuZHJhZ1N0YXJ0WFxuICAgICAgICB0aGlzLmRyYWdNb3ZlWSA9IGUuY2xpZW50WSAtIHRoaXMuZHJhZ1N0YXJ0WVxuICAgICAgICB0aGlzLmVsLnN0eWxlLnRyYW5zZm9ybSA9IGB0cmFuc2xhdGUoJHt0aGlzLmRyYWdNb3ZlWH1weCwgJHt0aGlzLmRyYWdNb3ZlWX1weClgXG4gICAgfSxcblxuICAgIG9uRHJhZ1N0YXJ0KGUpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpXG5cbiAgICAgICAgdGhpcy5kcmFnU3RhcnRYID0gZS5jbGllbnRYXG4gICAgICAgIHRoaXMuZHJhZ1N0YXJ0WSA9IGUuY2xpZW50WVxuXG4gICAgICAgIGRvY3VtZW50Lm9ubW91c2Vtb3ZlID0gdGhpcy5vbkRyYWcuYmluZCh0aGlzKVxuICAgICAgICBkb2N1bWVudC5vbm1vdXNldXAgPSB0aGlzLm9uRHJhZ1N0b3AuYmluZCh0aGlzKVxuICAgIH0sXG5cbiAgICBvbkRyYWdTdG9wKGUpIHtcbiAgICAgICAgaWYgKHRoaXMuZHJhZ01vdmVYIHx8IHRoaXMuZHJhZ01vdmVZKSB7XG4gICAgICAgICAgICB0aGlzLmVsLnN0eWxlLmxlZnQgPSBgJHtwYXJzZUludCh0aGlzLmVsLnN0eWxlLmxlZnQpICsgdGhpcy5kcmFnTW92ZVh9cHhgXG4gICAgICAgICAgICB0aGlzLmVsLnN0eWxlLnRvcCA9IGAke3BhcnNlSW50KHRoaXMuZWwuc3R5bGUudG9wKSArIHRoaXMuZHJhZ01vdmVZfXB4YFxuICAgICAgICAgICAgdGhpcy5kcmFnTW92ZVggPSBudWxsXG4gICAgICAgICAgICB0aGlzLmRyYWdNb3ZlWSA9IG51bGxcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgdGhpcy5lbC5zdHlsZS50cmFuc2Zvcm0gPSBudWxsXG5cbiAgICAgICAgZG9jdW1lbnQub25tb3VzZW1vdmUgPSBudWxsXG4gICAgICAgIGRvY3VtZW50Lm9ubW91c2V1cCA9IG51bGxcbiAgICB9LFxuXG4gICAgb25Ub2dnbGVFeHBhbmQoZSkge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKVxuICAgICAgICB0aGlzLmVsLmNsYXNzTGlzdC50b2dnbGUoJ2lzLWV4cGFuZGVkJylcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IHdpblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9qcy9tb2R1bGVzL3dpbi5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3\n");

/***/ }),
/* 4 */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2Nzcy9zdHlsZS5zY3NzP2U3Y2QiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvc2Nzcy9zdHlsZS5zY3NzXG4vLyBtb2R1bGUgaWQgPSA0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///4\n");

/***/ })
/******/ ]);